// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.3
// source: gping.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DstAddr  string `protobuf:"bytes,1,opt,name=dst_addr,json=dstAddr,proto3" json:"dst_addr,omitempty"`
	SrcAddr  string `protobuf:"bytes,2,opt,name=src_addr,json=srcAddr,proto3" json:"src_addr,omitempty"`
	Count    int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Ttl      int32  `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Tos      int32  `protobuf:"varint,5,opt,name=tos,proto3" json:"tos,omitempty"`
	Size     int32  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Timeout  string `protobuf:"bytes,7,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Interval string `protobuf:"bytes,8,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gping_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gping_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_gping_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetDstAddr() string {
	if x != nil {
		return x.DstAddr
	}
	return ""
}

func (x *PingRequest) GetSrcAddr() string {
	if x != nil {
		return x.SrcAddr
	}
	return ""
}

func (x *PingRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PingRequest) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *PingRequest) GetTos() int32 {
	if x != nil {
		return x.Tos
	}
	return 0
}

func (x *PingRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PingRequest) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

func (x *PingRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

type PingBulkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts    []string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	SrcAddr  string   `protobuf:"bytes,2,opt,name=src_addr,json=srcAddr,proto3" json:"src_addr,omitempty"`
	Count    int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Ttl      int32    `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Tos      int32    `protobuf:"varint,5,opt,name=tos,proto3" json:"tos,omitempty"`
	Size     int32    `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Timeout  string   `protobuf:"bytes,7,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Interval string   `protobuf:"bytes,8,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *PingBulkRequest) Reset() {
	*x = PingBulkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gping_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingBulkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingBulkRequest) ProtoMessage() {}

func (x *PingBulkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gping_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingBulkRequest.ProtoReflect.Descriptor instead.
func (*PingBulkRequest) Descriptor() ([]byte, []int) {
	return file_gping_proto_rawDescGZIP(), []int{1}
}

func (x *PingBulkRequest) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *PingBulkRequest) GetSrcAddr() string {
	if x != nil {
		return x.SrcAddr
	}
	return ""
}

func (x *PingBulkRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PingBulkRequest) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *PingBulkRequest) GetTos() int32 {
	if x != nil {
		return x.Tos
	}
	return 0
}

func (x *PingBulkRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PingBulkRequest) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

func (x *PingBulkRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

type PingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rtt  float64 `protobuf:"fixed64,1,opt,name=rtt,proto3" json:"rtt,omitempty"`
	Seq  int32   `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	Ttl  int32   `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Size int32   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Addr string  `protobuf:"bytes,5,opt,name=addr,proto3" json:"addr,omitempty"`
	Err  string  `protobuf:"bytes,6,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *PingReply) Reset() {
	*x = PingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gping_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReply) ProtoMessage() {}

func (x *PingReply) ProtoReflect() protoreflect.Message {
	mi := &file_gping_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReply.ProtoReflect.Descriptor instead.
func (*PingReply) Descriptor() ([]byte, []int) {
	return file_gping_proto_rawDescGZIP(), []int{2}
}

func (x *PingReply) GetRtt() float64 {
	if x != nil {
		return x.Rtt
	}
	return 0
}

func (x *PingReply) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *PingReply) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *PingReply) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PingReply) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *PingReply) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type PingResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host       string  `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	MinRtt     float64 `protobuf:"fixed64,2,opt,name=min_rtt,json=minRtt,proto3" json:"min_rtt,omitempty"`
	AvgRtt     float64 `protobuf:"fixed64,3,opt,name=avg_rtt,json=avgRtt,proto3" json:"avg_rtt,omitempty"`
	MaxRtt     float64 `protobuf:"fixed64,4,opt,name=max_rtt,json=maxRtt,proto3" json:"max_rtt,omitempty"`
	PacketLoss int32   `protobuf:"varint,5,opt,name=packet_loss,json=packetLoss,proto3" json:"packet_loss,omitempty"`
	Err        string  `protobuf:"bytes,6,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *PingResult) Reset() {
	*x = PingResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gping_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResult) ProtoMessage() {}

func (x *PingResult) ProtoReflect() protoreflect.Message {
	mi := &file_gping_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResult.ProtoReflect.Descriptor instead.
func (*PingResult) Descriptor() ([]byte, []int) {
	return file_gping_proto_rawDescGZIP(), []int{3}
}

func (x *PingResult) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *PingResult) GetMinRtt() float64 {
	if x != nil {
		return x.MinRtt
	}
	return 0
}

func (x *PingResult) GetAvgRtt() float64 {
	if x != nil {
		return x.AvgRtt
	}
	return 0
}

func (x *PingResult) GetMaxRtt() float64 {
	if x != nil {
		return x.MaxRtt
	}
	return 0
}

func (x *PingResult) GetPacketLoss() int32 {
	if x != nil {
		return x.PacketLoss
	}
	return 0
}

func (x *PingResult) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type PingBulkResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*PingResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *PingBulkResult) Reset() {
	*x = PingBulkResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gping_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingBulkResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingBulkResult) ProtoMessage() {}

func (x *PingBulkResult) ProtoReflect() protoreflect.Message {
	mi := &file_gping_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingBulkResult.ProtoReflect.Descriptor instead.
func (*PingBulkResult) Descriptor() ([]byte, []int) {
	return file_gping_proto_rawDescGZIP(), []int{4}
}

func (x *PingBulkResult) GetResults() []*PingResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_gping_proto protoreflect.FileDescriptor

var file_gping_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x01,
	0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x64, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0xc6, 0x01, 0x0a, 0x0f, 0x50, 0x69, 0x6e, 0x67,
	0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x68,
	0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x41, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x74, 0x74, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x74, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x22, 0x7b, 0x0a, 0x09, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x74, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x72, 0x74, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x74, 0x74, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x9e, 0x01,
	0x0a, 0x0a, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x74, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x52, 0x74, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x76, 0x67,
	0x5f, 0x72, 0x74, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x76, 0x67, 0x52,
	0x74, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x74, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x52, 0x74, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x37,
	0x0a, 0x0e, 0x50, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x25, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x32, 0x63, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12,
	0x27, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0c, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x32, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x6c, 0x6b, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x42, 0x75,
	0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07,
	0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gping_proto_rawDescOnce sync.Once
	file_gping_proto_rawDescData = file_gping_proto_rawDesc
)

func file_gping_proto_rawDescGZIP() []byte {
	file_gping_proto_rawDescOnce.Do(func() {
		file_gping_proto_rawDescData = protoimpl.X.CompressGZIP(file_gping_proto_rawDescData)
	})
	return file_gping_proto_rawDescData
}

var file_gping_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_gping_proto_goTypes = []interface{}{
	(*PingRequest)(nil),     // 0: PingRequest
	(*PingBulkRequest)(nil), // 1: PingBulkRequest
	(*PingReply)(nil),       // 2: PingReply
	(*PingResult)(nil),      // 3: PingResult
	(*PingBulkResult)(nil),  // 4: PingBulkResult
}
var file_gping_proto_depIdxs = []int32{
	3, // 0: PingBulkResult.results:type_name -> PingResult
	0, // 1: Ping.GetPing:input_type -> PingRequest
	1, // 2: Ping.GetBulkPing:input_type -> PingBulkRequest
	2, // 3: Ping.GetPing:output_type -> PingReply
	4, // 4: Ping.GetBulkPing:output_type -> PingBulkResult
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gping_proto_init() }
func file_gping_proto_init() {
	if File_gping_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gping_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gping_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingBulkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gping_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gping_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gping_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingBulkResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gping_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gping_proto_goTypes,
		DependencyIndexes: file_gping_proto_depIdxs,
		MessageInfos:      file_gping_proto_msgTypes,
	}.Build()
	File_gping_proto = out.File
	file_gping_proto_rawDesc = nil
	file_gping_proto_goTypes = nil
	file_gping_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PingClient is the client API for Ping service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PingClient interface {
	GetPing(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (Ping_GetPingClient, error)
	GetBulkPing(ctx context.Context, in *PingBulkRequest, opts ...grpc.CallOption) (*PingBulkResult, error)
}

type pingClient struct {
	cc grpc.ClientConnInterface
}

func NewPingClient(cc grpc.ClientConnInterface) PingClient {
	return &pingClient{cc}
}

func (c *pingClient) GetPing(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (Ping_GetPingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Ping_serviceDesc.Streams[0], "/Ping/GetPing", opts...)
	if err != nil {
		return nil, err
	}
	x := &pingGetPingClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Ping_GetPingClient interface {
	Recv() (*PingReply, error)
	grpc.ClientStream
}

type pingGetPingClient struct {
	grpc.ClientStream
}

func (x *pingGetPingClient) Recv() (*PingReply, error) {
	m := new(PingReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pingClient) GetBulkPing(ctx context.Context, in *PingBulkRequest, opts ...grpc.CallOption) (*PingBulkResult, error) {
	out := new(PingBulkResult)
	err := c.cc.Invoke(ctx, "/Ping/GetBulkPing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PingServer is the server API for Ping service.
type PingServer interface {
	GetPing(*PingRequest, Ping_GetPingServer) error
	GetBulkPing(context.Context, *PingBulkRequest) (*PingBulkResult, error)
}

// UnimplementedPingServer can be embedded to have forward compatible implementations.
type UnimplementedPingServer struct {
}

func (*UnimplementedPingServer) GetPing(*PingRequest, Ping_GetPingServer) error {
	return status.Errorf(codes.Unimplemented, "method GetPing not implemented")
}
func (*UnimplementedPingServer) GetBulkPing(context.Context, *PingBulkRequest) (*PingBulkResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBulkPing not implemented")
}

func RegisterPingServer(s *grpc.Server, srv PingServer) {
	s.RegisterService(&_Ping_serviceDesc, srv)
}

func _Ping_GetPing_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PingRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PingServer).GetPing(m, &pingGetPingServer{stream})
}

type Ping_GetPingServer interface {
	Send(*PingReply) error
	grpc.ServerStream
}

type pingGetPingServer struct {
	grpc.ServerStream
}

func (x *pingGetPingServer) Send(m *PingReply) error {
	return x.ServerStream.SendMsg(m)
}

func _Ping_GetBulkPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingServer).GetBulkPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Ping/GetBulkPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingServer).GetBulkPing(ctx, req.(*PingBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ping_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Ping",
	HandlerType: (*PingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBulkPing",
			Handler:    _Ping_GetBulkPing_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetPing",
			Handler:       _Ping_GetPing_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "gping.proto",
}
